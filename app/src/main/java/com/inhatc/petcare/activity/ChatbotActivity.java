package com.inhatc.petcare.activity;

import android.content.Intent;
import android.os.Bundle;
import android.view.MenuItem;
import android.view.View;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.ActionBarDrawerToggle;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.google.android.material.navigation.NavigationView;
import com.inhatc.petcare.R;
import com.inhatc.petcare.adapter.ChatAdapter;
import com.inhatc.petcare.model.ChatMessage;
import com.inhatc.petcare.service.OpenAIService;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.Response;

public class ChatbotActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {

    private DrawerLayout drawerLayout;
    private NavigationView navigationView;
    private Toolbar toolbar;
    
    private RecyclerView chatRecyclerView;
    private EditText messageInput;
    private ImageButton sendButton;
    private ChatAdapter chatAdapter;
    private List<ChatMessage> chatMessages;
    private OpenAIService openAIService;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_chatbot);

        // OpenAI ÏÑúÎπÑÏä§ Ï¥àÍ∏∞Ìôî
        openAIService = new OpenAIService(this);

        // UI Ï¥àÍ∏∞Ìôî
        initViews();
        initChat();
        setupToolbar();
        setupNavigation();

        // ÌôòÏòÅ Î©îÏãúÏßÄ Ï∂îÍ∞Ä
        addBotMessage("ÏïàÎÖïÌïòÏÑ∏Ïöî! üêæ Î∞òÎ†§ÎèôÎ¨º Í±¥Í∞ï ÏÉÅÎã¥ÏÇ¨ÏûÖÎãàÎã§.\n\nÎ∞òÎ†§ÎèôÎ¨ºÏùò Í±¥Í∞ïÏóê ÎåÄÌï¥ Í∂ÅÍ∏àÌïú Ï†êÏù¥ ÏûàÏúºÏãúÎ©¥ Ïñ∏Ï†úÎì† Î¨ºÏñ¥Î≥¥ÏÑ∏Ïöî.\n\nÏòàÏãú ÏßàÎ¨∏:\n‚Ä¢ Í∞ïÏïÑÏßÄÍ∞Ä Î∞•ÏùÑ Ïïà Î®πÏñ¥Ïöî\n‚Ä¢ Í≥†ÏñëÏù¥Í∞Ä Í∏∞Ïπ®ÏùÑ Ìï¥Ïöî\n‚Ä¢ ÏòàÎ∞©Ï†ëÏ¢ÖÏùÄ Ïñ∏Ï†ú Î∞õÏïÑÏïº ÌïòÎÇòÏöî?");
    }

    private void initViews() {
        chatRecyclerView = findViewById(R.id.chat_recycler_view);
        messageInput = findViewById(R.id.message_input);
        sendButton = findViewById(R.id.send_button);

        // Ï†ÑÏÜ° Î≤ÑÌäº ÌÅ¥Î¶≠ Î¶¨Ïä§ÎÑà
        sendButton.setOnClickListener(v -> sendMessage());
    }

    private void initChat() {
        chatMessages = new ArrayList<>();
        chatAdapter = new ChatAdapter(chatMessages);
        
        chatRecyclerView.setLayoutManager(new LinearLayoutManager(this));
        chatRecyclerView.setAdapter(chatAdapter);
    }

    private void setupToolbar() {
        toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        if (getSupportActionBar() != null) {
            getSupportActionBar().setDisplayShowTitleEnabled(false);
        }

        TextView toolbarTitle = toolbar.findViewById(R.id.toolbar_title_textview);
        if (toolbarTitle != null) {
            toolbarTitle.setOnClickListener(v -> {
                Intent intent = new Intent(ChatbotActivity.this, MainActivity.class);
                intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
                startActivity(intent);
            });
        }
    }

    private void setupNavigation() {
        drawerLayout = findViewById(R.id.drawer_layout);
        navigationView = findViewById(R.id.nav_view);
        
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawerLayout.addDrawerListener(toggle);
        toggle.syncState();
        navigationView.setNavigationItemSelectedListener(this);

        // ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò Ìó§Îçî ÌÉÄÏù¥ÌãÄ ÌÅ¥Î¶≠ Ïãú Î©îÏù∏ÏúºÎ°ú Ïù¥Îèô
        View headerView = navigationView.getHeaderView(0);
        TextView navTitleView = headerView.findViewById(R.id.nav_Title);
        navTitleView.setOnClickListener(v -> {
            Intent intent = new Intent(ChatbotActivity.this, MainActivity.class);
            intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);
            startActivity(intent);
        });
    }

    private void sendMessage() {
        String message = messageInput.getText().toString().trim();
        if (message.isEmpty()) {
            return;
        }

        // API ÌÇ§ ÌôïÏù∏
        if (openAIService.getApiKey().isEmpty()) {
            addBotMessage("‚ö†Ô∏è OpenAI API ÌÇ§Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.\n\n.env ÌååÏùºÏóê OPENAI_API_KEYÍ∞Ä ÏÑ§Ï†ïÎêòÏñ¥ ÏûàÎäîÏßÄ ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî.");
            return;
        }

        // ÏÇ¨Ïö©Ïûê Î©îÏãúÏßÄ Ï∂îÍ∞Ä
        addUserMessage(message);
        messageInput.setText("");

        // Î°úÎî© Î©îÏãúÏßÄ Ï∂îÍ∞Ä
        addBotMessage("ü§î ÏÉùÍ∞Å Ï§ëÏûÖÎãàÎã§...");

        // OpenAI API Ìò∏Ï∂ú
        openAIService.sendMessage(message, new Callback() {
            @Override
            public void onFailure(Call call, IOException e) {
                runOnUiThread(() -> {
                    removeLastMessage(); // Î°úÎî© Î©îÏãúÏßÄ Ï†úÍ±∞
                    addBotMessage("Ï£ÑÏÜ°Ìï©ÎãàÎã§. ÏùºÏãúÏ†ÅÏù∏ Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§. Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.");
                });
            }

            @Override
            public void onResponse(Call call, Response response) throws IOException {
                if (response.isSuccessful()) {
                    try {
                        String responseBody = response.body().string();
                        JSONObject jsonResponse = new JSONObject(responseBody);
                        JSONArray choices = jsonResponse.getJSONArray("choices");
                        if (choices.length() > 0) {
                            JSONObject choice = choices.getJSONObject(0);
                            JSONObject message = choice.getJSONObject("message");
                            String content = message.getString("content");
                            
                            runOnUiThread(() -> {
                                removeLastMessage(); // Î°úÎî© Î©îÏãúÏßÄ Ï†úÍ±∞
                                addBotMessage(content);
                            });
                        }
                    } catch (JSONException e) {
                        runOnUiThread(() -> {
                            removeLastMessage(); // Î°úÎî© Î©îÏãúÏßÄ Ï†úÍ±∞
                            addBotMessage("ÏùëÎãµÏùÑ Ï≤òÎ¶¨ÌïòÎäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.");
                        });
                    }
                } else {
                    runOnUiThread(() -> {
                        removeLastMessage(); // Î°úÎî© Î©îÏãúÏßÄ Ï†úÍ±∞
                        addBotMessage("ÏÑúÎ≤Ñ Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§. Ïû†Ïãú ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.");
                    });
                }
            }
        });
    }

    private void addUserMessage(String message) {
        ChatMessage chatMessage = new ChatMessage(message, true);
        chatMessages.add(chatMessage);
        chatAdapter.notifyItemInserted(chatMessages.size() - 1);
        scrollToBottom();
    }

    private void addBotMessage(String message) {
        ChatMessage chatMessage = new ChatMessage(message, false);
        chatMessages.add(chatMessage);
        chatAdapter.notifyItemInserted(chatMessages.size() - 1);
        scrollToBottom();
    }

    private void removeLastMessage() {
        if (!chatMessages.isEmpty()) {
            chatMessages.remove(chatMessages.size() - 1);
            chatAdapter.notifyItemRemoved(chatMessages.size());
        }
    }

    private void scrollToBottom() {
        chatRecyclerView.post(() -> chatRecyclerView.smoothScrollToPosition(chatMessages.size() - 1));
    }

    @Override
    public boolean onNavigationItemSelected(@NonNull MenuItem item) {
        int id = item.getItemId();

        if (id == R.id.nav_my_page) {
            startActivity(new Intent(this, MyProfileActivity.class));
        } else if (id == R.id.nav_medical_records) {
            startActivity(new Intent(this, MedicalRecordActivity.class));
        } else if (id == R.id.nav_chatbot) {
            // ÌòÑÏû¨ ÌôîÎ©¥
        } else if (id == R.id.nav_nearby_hospitals) {
            startActivity(new Intent(this, NearbyHospitalsActivity.class));
        } else if (id == R.id.nav_logout) {
            com.google.firebase.auth.FirebaseAuth.getInstance().signOut();
            startActivity(new Intent(this, LoginActivity.class));
            finish();
        } else {
            Toast.makeText(this, item.getTitle() + " ÌÅ¥Î¶≠", Toast.LENGTH_SHORT).show();
        }

        drawerLayout.closeDrawer(navigationView);
        return true;
    }
}
